package ru.vlad.announcer.manager;

import net.kyori.adventure.text.minimessage.MiniMessage;
import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;
import ru.vlad.announcer.AnnouncerPlugin;
import ru.vlad.announcer.data.Template;

import java.util.ArrayList;
import java.util.List;

public class GUIManager implements Listener {
    private final AnnouncerPlugin plugin;
    private final TemplateManager templates;
    private final MiniMessage mm = MiniMessage.miniMessage();

    public GUIManager(AnnouncerPlugin plugin, TemplateManager templates) {
        this.plugin = plugin; this.templates = templates;
    }

    public void openMain(Player p) {
        Inventory inv = Bukkit.createInventory(null, 27, "üìú –ü–∞–Ω–µ–ª—å –æ–±—ä—è–≤–ª–µ–Ω–∏–π");
        inv.setItem(10, makeItem(Material.PAPER, "¬ßa–°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω"));
        inv.setItem(12, makeItem(Material.CHEST, "¬ße–°–ø–∏—Å–æ–∫ —à–∞–±–ª–æ–Ω–æ–≤"));
        inv.setItem(14, makeItem(Material.CLOCK, "¬ß6–¢–∞–π–º–µ—Ä—ã"));
        inv.setItem(16, makeItem(Material.REDSTONE, "¬ßc–°–æ–±—ã—Ç–∏—è"));
        p.openInventory(inv);
    }

    public void openList(Player p) {
        List<Template> list = new ArrayList<>(templates.list());
        int rows = Math.max(9, ((list.size()+1 + 8) / 9) * 9);
        Inventory inv = Bukkit.createInventory(null, rows, "üìÑ –®–∞–±–ª–æ–Ω—ã");
        int slot = 0;
        for (Template t : list) {
            ItemStack it = makeItem(Material.PAPER, "¬ßf" + t.id());
            ItemMeta m = it.getItemMeta();
            List<String> lore = new ArrayList<>();
            lore.add("¬ß7–¢–∏–ø: ¬ße" + t.type());
            lore.add("¬ß7–í—Ä–µ–º—è (–¥–ª—è —Ç–∏—Ç—É–ª–∞): ¬ße" + t.titleTime());
            lore.add("¬ß7–í–∫–ª: " + (t.enabled() ? "¬ßa–î–∞" : "¬ßc–ù–µ—Ç"));
            lore.add("¬ß7–õ–ö–ú ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å | –ü–ö–ú ‚Äî —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å | –®–∏—Ñ—Ç+–õ–ö–ú ‚Äî —É–¥–∞–ª–∏—Ç—å");
            m.setLore(lore);
            it.setItemMeta(m);
            inv.setItem(slot++, it);
        }
        inv.setItem(rows-1, makeItem(Material.BARRIER, "¬ßc–ó–∞–∫—Ä—ã—Ç—å"));
        p.openInventory(inv);
    }

    private ItemStack makeItem(Material mat, String name) {
        ItemStack it = new ItemStack(mat);
        ItemMeta meta = it.getItemMeta();
        meta.setDisplayName(name);
        it.setItemMeta(meta);
        return it;
    }

    @EventHandler
    public void onInvClick(InventoryClickEvent e) {
        if (e.getView().title().equals("üìú –ü–∞–Ω–µ–ª—å –æ–±—ä—è–≤–ª–µ–Ω–∏–π")) {
            e.setCancelled(true);
            Player p = (Player)e.getWhoClicked();
            int slot = e.getSlot();
            if (slot == 10) { plugin.chatEditor().startCreateSession(p); }
            if (slot == 12) { openList(p); }
            if (slot == 14) { p.sendMessage("¬ß6–¢–∞–π–º–µ—Ä—ã ‚Äî –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã)"); }
            if (slot == 16) { p.sendMessage("¬ß6–°–æ–±—ã—Ç–∏—è —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ config.yml"); }
        }
        if (e.getView().title().startsWith("üìÑ –®–∞–±–ª–æ–Ω—ã")) {
            e.setCancelled(true);
            Player p = (Player)e.getWhoClicked();
            ItemStack cur = e.getCurrentItem();
            if (cur == null) return;
            if (cur.getType() == Material.BARRIER) { p.closeInventory(); return; }
            String id = cur.getItemMeta().getDisplayName().replace("¬ßf", "");
            if (e.isLeftClick() && !e.isShiftClick()) {
                templates.broadcastTemplate(id, "all", p);
                p.sendMessage("¬ßa–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: " + id);
            } else if (e.isRightClick()) {
                plugin.chatEditor().startEditSession(p, id);
            } else if (e.isShiftClick()) {
                templates.remove(id);
                p.sendMessage("¬ßc–®–∞–±–ª–æ–Ω —É–¥–∞–ª—ë–Ω: " + id);
                openList(p);
            }
        }
    }
}
